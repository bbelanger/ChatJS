@model ChatJsMvcSample.Models.RoomViewModel

@{
    this.Layout = "../_Layout.cshtml";
}

@section Header
{
    <link rel="stylesheet" type="text/css" href="/Content/Styles/signin.css" />
}

<div class="container">
    @using (this.Html.BeginForm("EditRoom", "Home", FormMethod.Post))
    {
        <h2 class="form-heading">@(this.Model != null && this.Model.Id.HasValue ? "Edit room" : "Create room")</h2>
        
        <p>
            @Html.TextBoxFor(m => m.RoomName, new { placeHolder = "Name", @class = "form-control" })
        </p>
        <p>
            @Html.TextAreaFor(m => m.Description, new { placeHolder = "Description", @class = "form-control" })
        </p>
        
        <h3>Users in room</h3>
        
        <table class="table">
            <thead>
                <th>User</th>
                <th>Is in room</th>
            </thead>
            <tbody>
                @for (var i = 0; i < this.Model.RoomUsers.Count; i++)
                {
                    var roomUser = this.Model.RoomUsers[i];
                    <tr>
                        <td>
                            @roomUser.UserDisplayName
                            @Html.HiddenFor(m => m.RoomUsers[i].UserId)
                            @Html.HiddenFor(m => m.RoomUsers[i].UserDisplayName)
                        </td>
                        <td>
                            @Html.EditorFor(m => m.RoomUsers[i].IsEnlisted)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
        @Html.ValidationSummary(false)

        <button class="btn btn-large btn-primary btn-block" type="submit">Save</button>
    }
</div>
